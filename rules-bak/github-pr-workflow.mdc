---
alwaysApply: false
description: Covers the proven workflow for addressing GitHub PR reviewer comments,
  with a focus on using the GitHub CLI and professional response templates
globs:
- .github/**
- dev/scripts/**
- '**/PR*.md'
---

# GitHub PR Review Workflow

## Overview
This rule covers the proven workflow for handling GitHub pull request reviewer comments, established through successful completion of PR #12.

## Critical Tools and Commands

### Use GitHub CLI, Not fetch_pull_request Tool
- **Always use `gh` CLI** for PR operations, not the fetch_pull_request tool
- `gh pr list --head BRANCH_NAME` - Find PRs for current branch
- `gh pr view PR_NUMBER` - Read complete PR details including reviewer comments
- `gh api repos/OWNER/REPO/pulls/PR_NUMBER/comments` - Get inline comments (the real reviewer issues)

### Finding the Real Issues
- **Ignore "Comments suppressed due to low confidence"** - these are automated suggestions
- **Focus on actual reviewer comments** found via the API endpoint
- Real issues are typically in inline comments on specific lines

## Response Workflow

### 1. Read All Comments
```bash
gh pr view PR_NUMBER  # Main review body
gh api repos/OWNER/REPO/pulls/PR_NUMBER/comments  # Inline comments (critical)
```

### 2. Get Comment IDs for Backlinking
```bash
gh api repos/OWNER/REPO/pulls/PR_NUMBER/comments --jq '.[] | {id: .id, line: .line}'
```

### 3. Address Each Issue Systematically
- Fix code issues with proper testing
- Create descriptive commit messages
- Reference specific reviewer suggestions

### 4. Create Professional Response with Backlinks
Format: `### Re: [issue description] ([Line X Comment](https://github.com/owner/repo/pull/PR#issuecomment-ID))`

Example:
```markdown
### 1. **Re: API key security issue** ([Line 16 Comment](https://github.com/dzackgarza/diss/pull/12#issuecomment-3011026363))
âœ… **Fixed in commit a86629a5**: Added environment variable loading with proper error handling
ðŸ§ª **Verification**: Run with missing API key to see graceful fallback
```

### 5. Post Response
```bash
gh pr comment PR_NUMBER --body-file response.md
```

## Success Factors
- **Exact comment backlinking** shows professionalism and attention to detail
- **Systematic addressing** of each comment individually
- **Verification methods** provided for each fix
- **Commit traceability** linking fixes to specific commits
- **Professional tone** with checkmarks and clear structure

## Key Files Referenced
- [AGENTS.md](mdc:AGENTS.md) - Contains additional GitHub workflow documentation
- [diss-setup](mdc:diss-setup) - Environment setup for development workflows

This workflow resulted in successful PR merge and has been battle-tested through real reviewer interactions.
---
