#!/bin/bash

# Task Master complete-with-story command wrapper
# Complete task with TDD user story validation

set -e

SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
PROJECT_ROOT="$(cd "$SCRIPT_DIR/.." && pwd)"

# Default values
TASK_ID=""
STORY_ID=""
HELP=false

# Function to display help
show_help() {
    cat << EOF
Task Master complete-with-story Command

Complete a task with TDD user story validation proof.

Usage:
    task-master-complete-with-story --id=<task_id> [--story-id=<story_id>]

Options:
    --id=<task_id>          Task ID to complete (required)
    --story-id=<story_id>   Story ID for reference (optional)
    --help                  Show this help message

Examples:
    task-master-complete-with-story --id=47
    task-master-complete-with-story --id=47 --story-id=task_47

Description:
    This command performs comprehensive validation before marking a task complete:
    1. Validates user story exists and is passing
    2. Checks temporal grid proof exists and is recent
    3. Verifies all TDD requirements are met
    4. Marks task as complete in Task Master
    5. Preserves validation metadata for audit trail

Validation Process:
    ‚úì User story validation (same as validate-task)
    ‚úì Temporal grid proof verification
    ‚úì Test execution metadata check
    ‚úì Story status confirmation
    ‚úì Task Master status update

Benefits:
    - Ensures task completion has visual proof
    - Maintains TDD compliance for project
    - Creates audit trail for task completion
    - Prevents premature task closure

EOF
}

# Parse command line arguments
while [[ $# -gt 0 ]]; do
    case $1 in
        --id=*)
            TASK_ID="${1#*=}"
            shift
            ;;
        --story-id=*)
            STORY_ID="${1#*=}"
            shift
            ;;
        --help)
            HELP=true
            shift
            ;;
        *)
            echo "Unknown option: $1"
            echo "Use --help for usage information"
            exit 1
            ;;
    esac
done

# Show help if requested
if [ "$HELP" = true ]; then
    show_help
    exit 0
fi

# Validate required arguments
if [ -z "$TASK_ID" ]; then
    echo "Error: --id parameter is required"
    echo "Use --help for usage information"
    exit 1
fi

# Check if we're in a Task Master project
if [ ! -f "$PROJECT_ROOT/.taskmaster/config.json" ]; then
    echo "Error: Not in a Task Master project directory"
    echo "Run 'task-master init' first"
    exit 1
fi

# Check if TDD integration exists
TDD_COMMANDS="$PROJECT_ROOT/V3-minimal/src/tdd_integration/tdd_commands.py"
if [ ! -f "$TDD_COMMANDS" ]; then
    echo "Error: TDD integration not found at $TDD_COMMANDS"
    echo "Ensure the TDD integration system is properly installed"
    exit 1
fi

# Check if Python/PDM is available
if ! command -v pdm &> /dev/null; then
    echo "Warning: PDM not found, falling back to python3"
    PYTHON_CMD="python3"
else
    PYTHON_CMD="pdm run python"
fi

echo "üèÅ Completing Task $TASK_ID with story validation..."

# Change to V3-minimal directory for execution
cd "$PROJECT_ROOT/V3-minimal"

# Execute the TDD validation command first
PYTHON_ARGS="complete-with-story --id=$TASK_ID"
if [ -n "$STORY_ID" ]; then
    PYTHON_ARGS="$PYTHON_ARGS --story-id=$STORY_ID"
fi

echo "‚öôÔ∏è  Executing: $PYTHON_CMD $TDD_COMMANDS $PYTHON_ARGS"
echo ""

eval "$PYTHON_CMD \"$TDD_COMMANDS\" $PYTHON_ARGS"

# Check if validation passed
if [ $? -eq 0 ]; then
    echo ""
    echo "‚úÖ TDD validation passed! Marking task complete in Task Master..."
    
    # Change back to project root for task-master command
    cd "$PROJECT_ROOT"
    
    # Mark the task as complete using Task Master
    echo "‚öôÔ∏è  Executing: task-master set-status --id=$TASK_ID --status=done"
    
    task-master set-status --id="$TASK_ID" --status=done
    
    if [ $? -eq 0 ]; then
        echo ""
        echo "üéâ Task $TASK_ID completed successfully with TDD validation!"
        echo ""
        echo "‚úÖ Task marked as 'done' in Task Master"
        echo "‚úÖ User story validation proof preserved"
        echo "‚úÖ Temporal grid evidence saved"
        echo ""
        echo "Summary:"
        echo "üìã Task Status: Complete"
        echo "üß™ TDD Status: Validated"
        echo "üìÅ Story Data: .taskmaster/stories/task_stories.json"
        echo "üñºÔ∏è  Visual Proof: V3-minimal/debug_screenshots/"
        echo ""
        echo "Next: Run 'task-master next' to get the next task"
    else
        echo ""
        echo "‚ùå Failed to mark task complete in Task Master"
        echo "TDD validation passed, but Task Master update failed"
        exit 1
    fi
else
    echo ""
    echo "‚ùå TDD validation failed - task cannot be completed"
    echo ""
    echo "Task $TASK_ID does not meet TDD completion requirements."
    echo "Follow the validation suggestions to fix issues."
    echo ""
    echo "Required steps:"
    echo "1. Generate story: task-master-generate-story --id=$TASK_ID --prompt=\"...\""
    echo "2. Run story test: task-master-test-story --id=$TASK_ID"
    echo "3. Validate: task-master-validate-task --id=$TASK_ID"
    echo "4. Then retry: task-master-complete-with-story --id=$TASK_ID"
    exit 1
fi