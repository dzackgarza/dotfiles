{
  "hooks": {
    "PostToolUse": [
      {
        "matcher": "Edit|Write|MultiEdit",
        "hooks": [
          {
            "type": "command",
            "command": "for file in $CLAUDE_FILE_PATHS; do if [[ $file == *.py ]]; then source /home/dzack/dotfiles/bin/llm-repl-project/.venv/bin/activate && ruff check --fix \"$file\" && black \"$file\"; fi; done"
          }
        ]
      },
      {
        "matcher": "Edit|Write|MultiEdit",
        "hooks": [
          {
            "type": "command",
            "command": "for file in $CLAUDE_FILE_PATHS; do if [[ $file == *.css ]] || [[ $file == *.tcss ]]; then if command -v prettier >/dev/null 2>&1; then prettier --write \"$file\"; fi && if command -v stylelint >/dev/null 2>&1; then stylelint --fix \"$file\" 2>/dev/null || true; fi; fi; done"
          }
        ]
      },
      {
        "matcher": "Edit|Write|MultiEdit",
        "hooks": [
          {
            "type": "command",
            "command": "cd /home/dzack/dotfiles/bin/llm-repl-project/V3-minimal && source /home/dzack/dotfiles/bin/llm-repl-project/.venv/bin/activate && for file in $CLAUDE_FILE_PATHS; do if [[ $file == *.py ]]; then python -m py_compile \"$file\" 2>&1 || echo \"‚ö†Ô∏è  Python syntax error in $file\"; fi; done"
          }
        ]
      },
      {
        "matcher": "Edit|Write|MultiEdit",
        "hooks": [
          {
            "type": "command",
            "command": "cd /home/dzack/dotfiles/bin/llm-repl-project/V3-minimal && source /home/dzack/dotfiles/bin/llm-repl-project/.venv/bin/activate && for file in $CLAUDE_FILE_PATHS; do if [[ $file == *.py ]]; then python -m pyflakes \"$file\" 2>&1 | grep -E '(undefined name|imported but unused|redefinition)' && echo \"‚ö†Ô∏è  Pyflakes found issues in $file\" || true; fi; done"
          }
        ]
      },
      {
        "matcher": "Edit|Write|MultiEdit",
        "hooks": [
          {
            "type": "command",
            "command": "cd /home/dzack/dotfiles/bin/llm-repl-project/V3-minimal && source /home/dzack/dotfiles/bin/llm-repl-project/.venv/bin/activate && for file in $CLAUDE_FILE_PATHS; do if [[ $file == *.py ]]; then python -m pylint --errors-only --disable=import-error \"$file\" 2>/dev/null | grep -E '^[EF]:' && echo \"‚ùå Pylint found errors in $file\" || true; fi; done"
          }
        ]
      },
      {
        "matcher": "Edit|Write|MultiEdit",
        "hooks": [
          {
            "type": "command",
            "command": "for file in $CLAUDE_FILE_PATHS; do if [[ $file == *.py ]] && command -v autopep8 >/dev/null 2>&1; then autopep8 --aggressive --aggressive --in-place \"$file\" 2>/dev/null || true; fi; done"
          }
        ]
      },
      {
        "matcher": "Edit|Write|MultiEdit",
        "hooks": [
          {
            "type": "command",
            "command": "cd /home/dzack/dotfiles/bin/llm-repl-project/V3-minimal && source /home/dzack/dotfiles/bin/llm-repl-project/.venv/bin/activate && for file in $CLAUDE_FILE_PATHS; do if [[ $file == *.py ]] && command -v isort >/dev/null 2>&1; then isort --check-only \"$file\" >/dev/null 2>&1 || (echo \"üîß Fixing imports in $file\" && isort \"$file\"); fi; done"
          }
        ]
      },
      {
        "matcher": "Edit|Write|MultiEdit",
        "hooks": [
          {
            "type": "command",
            "command": "for file in $CLAUDE_FILE_PATHS; do if [[ $file == *.json ]]; then python -m json.tool \"$file\" >/dev/null 2>&1 || echo \"‚ùå Invalid JSON in $file\"; elif [[ $file == *.yml ]] || [[ $file == *.yaml ]]; then python -c \"import yaml; yaml.safe_load(open('$file'))\" 2>&1 || echo \"‚ùå Invalid YAML in $file\"; fi; done"
          }
        ]
      },
      {
        "matcher": "Edit|Write|MultiEdit",
        "hooks": [
          {
            "type": "command",
            "command": "if git rev-parse --git-dir >/dev/null 2>&1; then for file in $CLAUDE_FILE_PATHS; do if [[ $file == *.py ]]; then git add \"$file\" 2>/dev/null || true; fi; done; fi"
          }
        ]
      },
      {
        "matcher": "Edit|Write|MultiEdit",
        "hooks": [
          {
            "type": "command",
            "command": "for file in $CLAUDE_FILE_PATHS; do if [[ $file =~ (requirements.*\\.txt|pyproject\\.toml|pdm\\.lock|package\\.json)$ ]]; then echo \"üì¶ Dependencies file updated - remember to install/sync!\"; fi; done"
          }
        ]
      }
    ],
    "PreToolUse": [
      {
        "matcher": "Bash",
        "hooks": [
          {
            "type": "command",
            "command": "jq -r '.tool_input.command' | grep -qE '^(sudo|rm -rf|:(){ :|:& };:)' && echo '{\"decision\": \"block\", \"reason\": \"Potentially dangerous command detected. Please use caution.\"}' || echo '{\"decision\": \"approve\"}'"
          }
        ]
      },
      {
        "matcher": "Bash",
        "hooks": [
          {
            "type": "command",
            "command": "jq -r '.tool_input.command' | grep -qE 'python.*-m.*src\\.main|pdm run.*src\\.main|poetry run.*src\\.main|just run|just run-mixed|just run-fast' && echo '{\"decision\": \"block\", \"reason\": \"GUI applications cannot be run in Claude Code environment. This would crash the interface. Please notify the user to run the app manually.\"}' || echo '{\"decision\": \"approve\"}'"
          }
        ]
      }
    ],
    "Stop": [
      {
        "hooks": [
          {
            "type": "command",
            "command": "source /home/dzack/dotfiles/bin/llm-repl-project/.venv/bin/activate && just test || echo '{\"continue\": false, \"stopReason\": \"Tests failed - please fix before continuing\"}'"
          }
        ]
      },
      {
        "hooks": [
          {
            "type": "command",
            "command": "echo \"‚ö†Ô∏è  Session ending. Consider writing progress to CLAUDE-CONTINUE.md for next session.\""
          }
        ]
      }
    ]
  }
}