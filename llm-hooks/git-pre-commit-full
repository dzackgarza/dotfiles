#!/bin/bash

# Comprehensive pre-commit hook for mathematical thesis work
# This script combines file protection, git history review, and citation verification

# Check for deletions of protected files
protected_patterns=(
    "corpus/data/textbooks/**/*.pdf"
    "corpus/data/papers/**/*.pdf"
    "corpus/data/**/canonical.*"
    "corpus/data/**/canonical/*"
)

deleted_files=$(git diff --cached --name-only --diff-filter=D)

if [ -n "$deleted_files" ]; then
    for pattern in "${protected_patterns[@]}"; do
        matching_files=$(echo "$deleted_files" | grep -E "$pattern" || true)
        if [ -n "$matching_files" ]; then
            echo "ERROR: Attempting to delete protected files:"
            echo "$matching_files"
            echo "These files are protected. To force deletion, use: git commit --no-verify"
            exit 1
        fi
    done
fi

# Git history review for modified files
echo "=== GIT HISTORY REVIEW ==="
modified_files=$(git diff --cached --name-only --diff-filter=M)

if [ -n "$modified_files" ]; then
    for file in $modified_files; do
        # Skip if file doesn't exist (shouldn't happen with diff-filter=M but safety check)
        if [ ! -f "$file" ]; then
            continue
        fi
        
        # Count recent commits touching this file (last 10 commits)
        recent_commits=$(git log --oneline -10 --follow -- "$file" 2>/dev/null | wc -l)
        
        if [ "$recent_commits" -ge 3 ]; then
            echo ""
            echo "⚠️  FILE: $file"
            echo "📊 Recent activity: $recent_commits commits in last 10"
            echo "📜 Recent history:"
            git log --oneline -5 --follow --format="  %h %s" -- "$file" 2>/dev/null || echo "  (no history available)"
            
            # Check for specific patterns that might indicate issues
            recent_messages=$(git log -5 --follow --format="%s" -- "$file" 2>/dev/null)
            if echo "$recent_messages" | grep -qi "fix\|correct\|error\|wrong"; then
                echo "🚨 Recent fixes detected in commit messages!"
            fi
            
            echo "💭 Current staged changes:"
            git diff --cached --stat -- "$file"
            echo ""
        fi
    done
    
    # Show overall summary
    total_modified=$(echo "$modified_files" | wc -l)
    if [ "$total_modified" -gt 0 ]; then
        echo "📋 SUMMARY: $total_modified file(s) being modified"
        echo "💡 TIP: Review history to avoid pattern repetition"
        echo "🔍 Use 'git log --follow <file>' for full file history"
        echo ""
        echo "🔥 CRITICAL MATHEMATICAL VERIFICATION REMINDERS:"
        echo "📚 CANONICAL SOURCE: When in doubt, ALWAYS look to AEGS23 as the canonical source"
        echo "🔗 CITE ALL COMPUTATIONS: Cite ALL nontrivial computations that might lead to confusion"
        echo "✅ VERIFICATION STRATEGY: Let editors verify claims by looking up citations themselves"
        echo "⚡ AEGS23 VERIFICATION: Use 'grep -n \"search_term\" ../../000-writing/refs/texts/AEGS.txt'"
        echo "🎯 LATTICE SIGNATURES: T_En = U(2) ⊕ E_8(2) has signature (1,9) per AEGS23 lines 292,747,1727"
        echo ""
        
        # Citation verification using Claude
        echo "🔍 CITATION VERIFICATION:"
        
        # Get the staged diff
        staged_diff=$(git diff --cached)
        
        if [ -n "$staged_diff" ]; then
            echo "Running Claude citation verification..."
            
            # Create prompt for Claude with the diff
            prompt="You are checking a git diff for citation accuracy. Here's the diff:

$staged_diff

**YOUR JOB:**
1. Look for any citations in the added lines (lines starting with +)
2. For each citation you find, go to \`/home/dzack/gitclones/diss/000-writing/refs/extracted_enhanced/individual/\`
3. Find the matching reference file (be flexible with naming - CD89 might be CD89_Cossec_Dolgachev_1989)
4. For each citation, provide DETAILED mathematical information about what you found:
   - What theorems/propositions/corollaries exist near the cited location
   - What the actual mathematical content says
   - Whether it matches the claimed statement
5. Verify if the mathematical claims are supported by the sources

**RESPOND WITH:** Either \"ALL VERIFIED\" or \"SUSPICIOUS: [list problems]\"

This is a quick check for citation fabrication - focus on obvious problems."

            # Run Claude with the diff
          #claude_result=$(cd ~/diss && /home/dzack/.claude/local/claude -p "$prompt" --allowedTools "Read" "Grep" "LS" "Glob" --add-dir /home/dzack/gitclones/diss/000-writing/refs 2>/dev/null)
          claude_result="Did you actually check the citation you are committing?"
          
          echo "$claude_result"
          
                      else
          echo "⚠️  Claude CLI not found at /home/dzack/.claude/local/claude - skipping citation verification"
          echo "💡 Install Claude CLI to enable citation checking"
        else
            echo "No staged changes to verify"
        fi
    fi
fi

exit 0
